!function(t){function o(t){return[].concat(t).join(".").split(".")}function a(t){var r=(t+"").indexOf("{{"),n=1,i=t.length,s=r;if(-1<r){for(r+=1;r<i&&0<n;)"{{"===t.substring(r,r+2)?(r+=1,n+=1):"}}"===t.substring(r,r+2)?(r+=2,n-=1):r++;return{outter:t.substring(s,r),string:t,start:s,end:r,value:t.substring(s+2,r-2).trim()}}return null}function u(t,r,n,i){var s=r.string.substring(0,r.start),e=r.string.substring(r.end,r.string.length),o=r.value,u=i[Number(o)],l=d(n,o),f=d(t.defs,o);return i.length&&void 0!==u&&null!=u?o=u:void 0!==l&&null!=l?o=l:void 0!==f&&null!=f&&(o=f),s+(o=h(t,o=function(t,r,n,i){var s,e=r.split(" "),o=t.filter[e[0]],u=e.slice(1).join(" "),l=[""],f=0,d=-1,c=u.length;if(o){for(;++d<c;)l[f]||(l[f]=""),"{{"===u.substring(d,d+2)?(s=a(u.substring(d)))?(d+=s.end,l[f]=h(t,s.outter,n,i),f+=1):l[f]+=u[d]:/\s/.test(u[d])&&!/\s/.test(u[d-1])?f+=1:l[f]+=u[d];return o.apply(t,l)}return r}(t,o=""+o,n,i),n,i))+e}function h(t,r,n,i){for(var s=r,e=a(s);e;)e=a(s=u(t,e,n,i));return s}function d(t,r){for(var n=t,i=o(r),s=0,e=i.length-1;s<e;s++){if(!n||void 0===n[i[s]])return;n=n[i[s]]}return n[i.slice(-1)[0]]}
/**
   * @param {object=} props
   * @param {object=} props.defs Language definitions
   * @param {object=} props.filter Language filters
  */function r(t){this.defs={},this.filter={},this.onloadSubscribers=[],this.load(t)}r.prototype.onLoad=function(t){return-1===this.onloadSubscribers.indexOf(t)&&this.onloadSubscribers.push(t),this},r.prototype.offLoad=function(t){var r=this.onloadSubscribers.indexOf(t);return-1<r&&this.onloadSubscribers.splice(r,1),this},
/**
   * @param {object=} props
   * @param {object=} props.defs Language definitions
   * @param {object=} props.filter Language filters
  */
r.prototype.load=function(t){var r=-1,n=this.onloadSubscribers.length;if(t&&t.defs&&Object.assign(this.defs,t.defs),t&&t.filters){for(var i in t.filters)this.filter[i]=t.filters[i].bind(this);t.filters.constructor&&t.filters.constructor.call(this)}for(;++r<n;)this.onloadSubscribers[r].call(this);return this},
/**
   * @param {string|array} path
   * @param {object=} template A template to process
   * @returns {string|undefined};
  */
r.prototype.get=function(t,r){var n=d(this.defs,t)||o(t).join("."),i=[],s=0,e=arguments.length;for(r=void 0===r?{}:r;++s<e;)i.push(arguments[s]);return"string"==typeof n?h(this,n,r,i):n},module?module.exports=r:"object"==typeof t&&(t.Language=r)}("undefined"==typeof window?null:window);
//# sourceMappingURL=index.min.js.map